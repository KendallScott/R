
library(httr)
library(jsonlite)
library(lubridate)
library(XML)
library(xml2)
library(jsonlite)
library(dplyr)
#Forms
url  <- "https://api.repsly.com"
path <- "/v3/export/forms/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type ="basic"), accept_json())

query <- httr::content(raw.result, as="raw")
json <- jsonlite::fromJSON(rawToChar(query), simplifyDataFrame = TRUE)

df <- flatten(as.data.frame(json[2]))

while (LastId>0) {
  url  <- "https://api.repsly.com"
  path <-gsub(" ", "", path)
  username <- "443FF361-805F-4006-A91C-D7721D232D9C"
  password <- "17ADA086-3E22-4566-9650-F9F1D8E54049"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type ="basic"), accept_json())
  
  query <- httr::content(raw.result, as="raw")
  json <- jsonlite::fromJSON(rawToChar(query), simplifyDataFrame = TRUE)
  df2 <- flatten(as.data.frame(json))
  LastId <-min(df2$MetaCollectionResult.LastID)
  path <- paste("/v3/export/forms/",LastId)
  
  df <- rbind(df2, df)
}

df<- df %>% 
  filter(Forms.FormName != "RM Ride Along" )
df<- df %>% 
  filter(Forms.FormName != "RM Ride Behind")
df<- df %>% 
  filter( Forms.FormName != "Best Buy Prepaid")
df<- df %>% 
  filter( Forms.FormName != "RM Weekly Feedback")
df<- df %>% 
  filter( Forms.FormName != "Prepaid Sales Walmart")
df<- df %>% 
  filter( Forms.FormName != "PrePaid Sales Best Buy")

df$DateandTime <- as.POSIXct(df$DateandTime,tz=Sys.timezone())

df$new <-gsub(pattern= "/Date", replacement="", df$DateandTime)
df$DateandTime <-gsub(pattern= ")/", replacement="", df$DateandTime)
df$newdate <- as.Date(df$DateandTime)
df <-df[df[["newdate"]] >= "2019-07-15", ]

x <- 1
df.org <- cbind(df[[26]][[x]], df[[4]][[x]], df[[5]][[x]], df[[10]][[x]])
while (x<NROW(df)) {
x<-x+1
df2.org <- cbind(df[[26]][[x]], df[[4]][[x]], df[[5]][[x]], df[[10]][[x]])
df.org <- rbind(df.org, df2.org)
}
names(df.org) <- c("Field", "Value", "FormID", "Formname", "Createdby")
df.org <- distinct(df.org, .keep_all = FALSE)

org <- DomoR::fetch('fa68b0b6-cb53-4b8b-8f51-fcd9ce6d0980')
col.names <-df %>% distinct( df$Forms.FormName)

DomoR::init('x', 'x')
DomoR::replace_ds('x', df.org)
