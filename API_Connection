library(httr)
library(jsonlite)
library(lubridate)
library(XML)
library(xml2)

#clients

url  <- "https://api.repsly.com"
path <- "/v3/export/clients/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)

this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Clients>|<Clients>", replacement="", this.raw.content.new)
df <-xmlToDataFrame(this.raw.new)

while (LastTimeStamp>0) {
  url  <- "https://api.repsly.com"
  path <- paste("/v3/export/clients/",LastTimeStamp)
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  
  
  this.raw.content <- rawToChar(raw.result$content)
  LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)
  
  this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Clients>|<Clients>", replacement="", this.raw.content.new)
  
  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}
DomoR::init('x', 'x')
DomoR::replace_ds('441c136f-7363-4030-a51b-4651d8c2fc18', df)

#representatives

url  <- "https://api.repsly.com/v3/export/representatives"
username <- "x"
password <- "x"
raw.result <- GET(url = url, authenticate(username, password, type = "basic"))

this.raw.new <-gsub(pattern= "</Representatives>|<Representatives>", replacement="", raw.result)
df <-xmlToDataFrame(this.raw.new)

DomoR::init('x', 'x')
DomoR::replace_ds('f91f03c1-9650-49e7-831b-387013a2d656', df)

#Forms
url  <- "https://api.repsly.com"
path <- "/v3/export/forms/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)

this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Forms>|<Forms>", replacement="", this.raw.content.new)
#this.raw.new <-gsub(pattern= "</Items>|<Items>", replacement="", this.raw.content)

#this.raw.new <-gsub(pattern= ";", replacement="", this.raw.new)
#this.raw.new <-gsub(pattern= ",", replacement="", this.raw.new)

this.raw.new <-gsub(pattern= "</Field>", replacement=";</Field>", this.raw.new)
this.raw.new <-gsub(pattern= "</Value>", replacement=",</Value>", this.raw.new)

df <-xmlToDataFrame(this.raw.new)

while (LastId>0) {
  url  <- "https://api.repsly.com"
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  this.raw.content <- rawToChar(raw.result$content)
  this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Forms>|<Forms>", replacement="", this.raw.content.new)

#this.raw.new <-gsub(pattern= ";", replacement="", this.raw.new)
#this.raw.new <-gsub(pattern= ",", replacement="", this.raw.new)
  this.raw.new <-gsub(pattern= "</Field>", replacement=";</Field>", this.raw.new)
  this.raw.new <-gsub(pattern= "</Value>", replacement=",</Value>", this.raw.new)
  
  LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)
  path <- paste("/v3/export/forms/",LastId)
  
  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}
df$newdate <- as.Date(df$DateAndTime)

df$StartTime <- as.Date(df$DateAndTime)
df$endTime <- as.Date(df$DateAndTime)
df <-df[df[["newdate"]] >= "2019-07-14", ]

DomoR::init('x', 'x')
DomoR::replace_ds('e3620ccd-4258-4224-ab1d-1c256774d278', df)

#Visits
url  <- "https://api.repsly.com"
path <- "/v3/export/visits/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)

this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Visits>|<Visits>", replacement="", this.raw.content.new)
df <-xmlToDataFrame(this.raw.new)


while (LastTimeStamp>0) {
  url  <- "https://api.repsly.com"
  path <- paste("/v3/export/visits/",LastTimeStamp)
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  
  this.raw.content <- rawToChar(raw.result$content)
  LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)
  
  this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Visits>|<Visits>", replacement="", this.raw.content.new)
  

  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}

df$newdate <- as.Date(df$Date)
df <-df[df[["newdate"]] >= "2019-07-01", ]
df <-df[df[["explicit"]] >= "2019-07-01", ]

DomoR::init('x', 'x')
DomoR::replace_ds('05f96db8-dd56-4f99-9795-bc693f1c3b4d', df)
