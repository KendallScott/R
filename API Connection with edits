library(httr)
library(jsonlite)
library(lubridate)
library(XML)
library(xml2)

#clients

url  <- "https://api.repsly.com"
path <- "/v3/export/clients/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)

this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Clients>|<Clients>", replacement="", this.raw.content.new)
df <-xmlToDataFrame(this.raw.new)

while (LastTimeStamp>0) {
  url  <- "https://api.repsly.com"
  path <- paste("/v3/export/clients/",LastTimeStamp)
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  
  
  this.raw.content <- rawToChar(raw.result$content)
  LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)
  
  this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Clients>|<Clients>", replacement="", this.raw.content.new)
  
  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}
DomoR::init('dsisystemsinc', 'x')
DomoR::replace_ds('441c136f-7363-4030-a51b-4651d8c2fc18', df)

#representatives
url  <- "https://api.repsly.com/v3/export/representatives"
username <- "x"
password <- "x"
raw.result <- GET(url = url, authenticate(username, password, type = "basic"))

this.raw.new <-gsub(pattern= "</Representatives>|<Representatives>", replacement="", raw.result)
df <-xmlToDataFrame(this.raw.new)

DomoR::init('dsisystemsinc', 'x')
DomoR::replace_ds('f91f03c1-9650-49e7-831b-387013a2d656', df)

##update below midday/end of day

library(httr)
library(jsonlite)
library(lubridate)
library(XML)
library(xml2)

#Forms
url  <- "https://api.repsly.com"
path <- "/v3/export/forms/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)

this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Forms>|<Forms>", replacement="", this.raw.content.new)

this.raw.new <-gsub(pattern= "</Field>", replacement=" ///</Field>", this.raw.new)
this.raw.new <-gsub(pattern= "</Value>", replacement=" ;;</Value>", this.raw.new)

df <-xmlToDataFrame(this.raw.new)

while (LastId>0) {
  url  <- "https://api.repsly.com"
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  this.raw.content <- rawToChar(raw.result$content)
  this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Forms>|<Forms>", replacement="", this.raw.content.new)

  this.raw.new <-gsub(pattern= "</Field>", replacement=" ///</Field>", this.raw.new)
  this.raw.new <-gsub(pattern= "</Value>", replacement=" ;;</Value>", this.raw.new)
  
  LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)
  path <- paste("/v3/export/forms/",LastId)
  
  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}
library(tidyr)
df$StartTime <- as.Date(df$DateAndTime)
df$endTime <- as.Date(df$DateAndTime)
df$newdate <- as.Date(df$DateAndTime)
df <-df[df[["newdate"]] >= "2019-07-15", ]
library(stringr)

visit.summary <- "(?<=Visit Summary: /// ?).*(?=;;?)"
df$Summary <- str_extract(df$Items, visit.summary)
df$Summary <-gsub(pattern= ";;.*", replacement="", df$Summary)

primary.purpose <- "(?<=What is the primary purpose of this visit? /// ?).*(?= ;;?)"
df$PrimaryPurpose <- str_extract(df$Items, primary.purpose)
df$PrimaryPurpose <-gsub(pattern= ";;.*", replacement="", df$PrimaryPurpose)

improve.sales <-"(?<=What would improve AT&T sales performance in this location?/// ?).*(?= ;;?)"
df$ImproveSales <- str_extract(df$Items, improve.sales)
df$ImproveSales <-gsub(pattern= ";;.*", replacement="", df$ImproveSales)

rate.impact <-"(?<=Rate your impact through this visit: /// ?).*(?= ;;?)"
df$rateImpact <- str_extract(df$Items, rate.impact)
df$rateImpact <-gsub(pattern= ";;.*", replacement="", df$rateImpact)

merch.issue <-"(?<=Are there any merchandising issues? ///?).*(?= ;;?)"
df$MerchIssues <- str_extract(df$Items, merch.issue)
df$MerchIssues <-gsub(pattern= ";;.*", replacement="", df$MerchIssues)

photo <-"https://repsly.s3.amazonaws.com/.*(?= ;;?)"
df$photo <- str_extract(df$Items, photo)
df$photo <-gsub(pattern= ";;.*", replacement="", df$photo)

dark.door <-"(?<=Is this a dark door? (Dark door = no seller in store for over two weeks)? /// ?).*(?= ;;?)"
df$darkdoor <- str_extract(df$Items, dark.door)
df$darkdoor <-gsub(pattern= ";;.*", replacement="", df$darkdoor)

DomoR::init('dsisystemsinc', 'x')
DomoR::replace_ds('e3620ccd-4258-4224-ab1d-1c256774d278', df)

#Visits

url  <- "https://api.repsly.com"
path <- "/v3/export/visits/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)

this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Visits>|<Visits>", replacement="", this.raw.content.new)
df <-xmlToDataFrame(this.raw.new)


while (LastTimeStamp>0) {
  url  <- "https://api.repsly.com"
  path <- paste("/v3/export/visits/",LastTimeStamp)
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  
  this.raw.content <- rawToChar(raw.result$content)
  LastTimeStamp <-gsub(pattern= ".*<LastTimeStamp>|</LastTimeStamp>.*", replacement="", this.raw.content)
  
  this.raw.content.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Visits>|<Visits>", replacement="", this.raw.content.new)
  

  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}

df$newdate <- as.Date(df$Date)
df <-df[df[["newdate"]] >= "2019-07-15", ]
df <-df[df[["ExplicitCheckIn"]] =="true", ]

DomoR::init('dsisystemsinc', 'x')
DomoR::replace_ds('05f96db8-dd56-4f99-9795-bc693f1c3b4d', df)


#Mileage
url  <- "https://api.repsly.com"
path <- "/v3/export/dailyworkingtime/0"
username <- "x"
password <- "x"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)

this.raw.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "<DailyWorkingTime><DailyWorkingTime>", replacement="<DailyWorkingTime><DailyWorkingTimes>", this.raw.new)
this.raw.new <-gsub(pattern= "</DailyWorkingTime></DailyWorkingTime>", replacement="</DailyWorkingTimes></DailyWorkingTime>", this.raw.new)
this.raw.new <-gsub(pattern= "</DailyWorkingTimes>|<DailyWorkingTimes>", replacement="", this.raw.new)

df <-xmlToDataFrame(this.raw.new)


while (LastId>0) {
  url  <- "https://api.repsly.com"
  path <- paste("/v3/export/dailyworkingtime/",LastId)
  path <-gsub(" ", "", path)
  username <- "x"
  password <- "x"
  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
  
  this.raw.content <- rawToChar(raw.result$content)
  LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)
  
  this.raw.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "<DailyWorkingTime><DailyWorkingTime>", replacement="<DailyWorkingTime><DailyWorkingTimes>", this.raw.new)
  this.raw.new <-gsub(pattern= "</DailyWorkingTime></DailyWorkingTime>", replacement="</DailyWorkingTimes></DailyWorkingTime>", this.raw.new)
  this.raw.new <-gsub(pattern= "</DailyWorkingTimes>|<DailyWorkingTimes>", replacement="", this.raw.new)
  
  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}

df$newdate <- as.Date(df$Date)

#df$NoOfVisits = as.numeric(as.character(df$NoOfVisits))
#df$MinMaxVisitsTime = as.numeric(as.character(df$MinMaxVisitsTime))
#df$TimeInTravel = as.numeric(as.character(df$TimeInTravel))
#df$TimeInPause = as.numeric(as.character(df$TimeInPause))
#df$TimeAtClient = as.numeric(as.character(df$TimeAtClient))
#df$MileageTotal = as.numeric(as.character(df$MileageTotal))
df$FSR<-  df$RepresentativeName


DomoR::init('dsisystemsinc', 'x')
#DomoR::create(df, name="Repsly_Mileage", description="connection to Repsly api for mileage information")
DomoR::replace_ds('0a878971-ab83-4995-9129-368e15e1e5fd', df)

#Photos: export/photos/{lastPhotoID} 


#Photos
path <- "/v3/export/photos/0"
raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))

this.raw.content <- rawToChar(raw.result$content)
LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
this.raw.new <-gsub(pattern= "</Photos>|<Photos>", replacement="", this.raw.new)

df <-xmlToDataFrame(this.raw.new)


while (LastId>0) {
  url  <- "https://api.repsly.com"
  path <- paste("/v3/export/photos/",LastId)
  path <-gsub(" ", "", path)

  raw.result <- GET(url = url, path=path, authenticate(username,  password, type = "basic"))
    this.raw.content <- rawToChar(raw.result$content)
  LastId <-gsub(pattern= ".*<LastID>|</LastID>.*", replacement="", this.raw.content)
  
  this.raw.new <-gsub(pattern= "<MetaCollectionResult>.*</MetaCollectionResult>", replacement="", this.raw.content)
  this.raw.new <-gsub(pattern= "</Photos>|<Photos>", replacement="", this.raw.new)
  
  df2 <-xmlToDataFrame(this.raw.new)
  df <- rbind(df2, df)
}
DomoR::init('dsisystemsinc', 'x')
#DomoR::create(df, name="Repsly_Photos", description="connection to Repsly api for photo information")

DomoR::replace_ds('13784066-a04f-46e6-97df-698f941d9084', df)
