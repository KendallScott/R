#One Sample
#Normal Distribtuion
#Large sample size>30
Observations are independentt.test(data, alternative = ""two.sided"")

#Two-Sample
#Normal Distribution
#Equal Sample Size or Equal St. Devs (pooled or unpooled variance)
#Observations are independent from one another

t.test(databasa ~ Database$Treatment, data = Database, conf.level = 0.99, var.equal = TRUE, alternative = ""two.sided"", ) 
# alternative can be, greater, less, and two.sided,

# Welch because var.equal = FALSE
t.test(Database$Score[Database$Treatment == 1], Database$Score[Database$Treatment == 0], data = Database, conf.level = 0.99, var.equal = FALSE, alternative = ""two.sided"")

"#Paired Test
#Normal Distribution
#Large Sample size
#Observations are dependent for each subject, but independent between subjects

t.test(x = Database$Placebo, y = Database$Ritalin, paired = TRUE, alternative = ""less"")
t.test(x = Database$Placebo, y = Database$Ritalin, paired = TRUE, conf.level = 0.9)

#Signed Rank
#Sing test
#Non parametric paired test (no normal distribution requirement)
#Observations are dependent for each subject but dependent between subjects
Horse = data.frame(Score = c(14.2,17,37.4,11.2,24.2,35.2,35.2,50.6,39.2,16.4,19,37.6,6.6,14.4,24.4,23.2,38,18.6), Treatment = c(""New"",""New"",""New"",""New"",""New"",""New"",""New"",""New"",""New"",""Traditional"",""Traditional"",""Traditional"",""Traditional"",""Traditional"",""Traditional"",""Traditional"",""Traditional"",""Traditional""))

wilcox.test(Horse$Score[Horse$Treatment == ""New""], Horse$Score[Horse$Treatment == ""Traditional""], paired = TRUE)"

#Leven#tests 
#equality of variancelevene.test(height$x,height$group)
"#Brown
#tests equality of variance better than levene
#Wilcoxon
#Non parametric two sample test (no normal dist assumption)
#Independent observations
scoreDF = data.frame(Score = c(37,49,55,77,23,31,46), Treatment = c(""New"",""New"",""New"",""New"",""Traditional"",""Traditional"",""Traditional""))
wilcox.test(PercentLost ~ Action , data = Database, conf.int = T, alternative = ""greater"")

# by default R provides the exact p-value rather than the normal apporixmation
wilcox.test(PercentLost ~ Action , data = Database, conf.int = T, alternative = ""greater"", exact = FALSE)

# conf.int and conf.level options provide the HL confidence
wilcox.test(PercentLost ~ Action , data = Database, conf.int = T, alternative = ""two.sided"", exact = FALSE, conf.level = 0.9)

"#ANOVA
#Normality not crucial, extremely long-tailed skewed dist only problem
#Homogenity of Variance
#Idependent Observations between and within groups
#not resistant to outliers
fit = aov(x~group, data = height)
summary(fit)

#ANOVA Welch
#No Homogenity of Variance Assumption
oneway.test(Income2005 ~ Educ, data=edu, var.equal=F)
#Kruskal-Wallis#non parametric
observations are independentkruskal.test(weight~group, data = PlantGrowth)

#Constrast
#Same as ANOVA
equal standard devations
independent observations between and within groups

Moderna$Drug = relevel(Moderna$Drug, ref = ""D"")
unique(Database$Handicap)
fit = lm(Score~ Handicap, data = Database)
leastsqure = lsmeans(fit, ""Handicap"")
Contrasts = list(AmpHearingVersusCrutchesWheelchair = c(.5, -.5, .5, 0, -.5))

contrast(leastsqure, Contrasts, adjust = ""sidak"")
aovHandi <- aov(Score ~ Handicap, data = handicap)

handi.bonf <- LSD.test(aovHandi, 'Handicap', p.adj='bonferroni')
handi.lsd <- LSD.test(aovHandi, 'Handicap', p.adj='none')
handi.scheffe <- scheffe.test(aovHandi, 'Handicap')
handi.tukey <- HSD.test(aovHandi, 'Handicap')
gout <- glht(aovHandi, mcp(Handicap = 'Dunnett'))
confint(gout)

